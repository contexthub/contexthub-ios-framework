<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCHGeofenceService.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCHGeofenceService</TokenIdentifier>
			<Abstract type="html">The Geofence Service is used to create, read, update, and delete geofences on ContextHub.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCHGeofenceService/sharedInstance</TokenIdentifier>
			<Abstract type="html">The singleton instance of the CCHGeofenceService.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">The singleton instance of the CCHGeofenceService.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/createGeofenceWithCenter:radius:name:tags:completionHandler:</TokenIdentifier>
			<Abstract type="html">Creates a new geofence on the ContextHub server.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)createGeofenceWithCenter:(CLLocationCoordinate2D)center radius:(CLLocationDistance)radius name:(NSString *)name tags:(NSArray *)tags completionHandler:(void ( ^ ) ( NSDictionary *geofence , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>center</Name>
					<Abstract type="html">CLLocationCoordinate2D The center coordinate of the geofence.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The radius of to be applied to the geofence.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the geofence.</Abstract>
				</Parameter><Parameter>
					<Name>tags</Name>
					<Abstract type="html">(optional) The tags to be applied to the geofence.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">(optional) Called when the request completes.  The block is passed an NSDictionary object that represents the geofence.  If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createGeofenceWithCenter:radius:name:tags:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/getGeofenceWithId:completionHandler:</TokenIdentifier>
			<Abstract type="html">Gets a geofence from ContextHub using the geofence Id.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)getGeofenceWithId:(NSString *)geofenceId completionHandler:(void ( ^ ) ( NSDictionary *geofence , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>geofenceId</Name>
					<Abstract type="html">The id of the geofence stored in ContextHub.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Called when the request completes. The block is passed an NSDictionary object that represents the geofence.  If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGeofenceWithId:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/getGeofencesWithTags:location:radius:completionHandler:</TokenIdentifier>
			<Abstract type="html">Gets geofences from ContextHub server.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)getGeofencesWithTags:(NSArray *)tags location:(CLLocation *)location radius:(CLLocationDistance)radius completionHandler:(void ( ^ ) ( NSArray *geofences , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>tags</Name>
					<Abstract type="html">(optional) Tags of the geofences that you are interested in.  Passing nil will return geofences without tags.</Abstract>
				</Parameter><Parameter>
					<Name>location</Name>
					<Abstract type="html">(optional) Location is used to filter the results to the nearest geofences.  Passing nil will remove the location filter.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">(optional) Radius in meters around the location which ContextHub considers &quot;nearby&quot;. Passing nil to location will cause this parameter to be ignored. Passing 0 will use the default radius of 50 miles (80437 meters)</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Called when the request completes. The block is passed an NSArray of NSDictionary objects that represent geofences.  If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGeofencesWithTags:location:radius:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/getGeofencesWithTags:operator:location:radius:completionHandler:</TokenIdentifier>
			<Abstract type="html">Gets geofences from ContextHub server.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)getGeofencesWithTags:(NSArray *)tags operator:(NSString *)tagOperator location:(CLLocation *)location radius:(CLLocationDistance)radius completionHandler:(void ( ^ ) ( NSArray *geofences , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>tags</Name>
					<Abstract type="html">(optional) Tags of the geofences that you are interested in.  Passing nil will return geofences without tags.</Abstract>
				</Parameter><Parameter>
					<Name>tagOperator</Name>
					<Abstract type="html">(optional) Operator used to build the query with the tags.  Passing ANY will find all geofences that match any of the tags. Passing ALL will find geofences that have all of the tags provided.  Passing nil will use the default ALL operator.</Abstract>
				</Parameter><Parameter>
					<Name>location</Name>
					<Abstract type="html">(optional) Location is used to filter the results to the nearest geofences.  Passing nil will remove the location filter.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">(optional) Radius in meters around the location which ContextHub considers &quot;nearby&quot;. Passing 0 to radius will cause this parameter to be ignored. Passing 0 will use the default radius of 50 miles (80437 meters)</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Called when the request completes. The block is passed an NSArray of NSDictionary objects that represent geofences.  If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGeofencesWithTags:operator:location:radius:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/updateGeofence:completionHandler:</TokenIdentifier>
			<Abstract type="html">Updates a geofence on the ContextHub server.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)updateGeofence:(NSDictionary *)geofence completionHandler:(void ( ^ ) ( NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>geofence</Name>
					<Abstract type="html">The geofence to be updated on ContextHub.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Called when the request completes. If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateGeofence:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCHGeofenceService/deleteGeofence:completionHandler:</TokenIdentifier>
			<Abstract type="html">Deletes an existing geofence from ContextHub.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>- (void)deleteGeofence:(NSDictionary *)geofence completionHandler:(void ( ^ ) ( NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>geofence</Name>
					<Abstract type="html">The geofence to be deleted from ContextHub.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">Called when the request completes. If an error occurs, the NSError will be passed to the block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteGeofence:completionHandler:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCHGeofenceService/regionForGeofence:</TokenIdentifier>
			<Abstract type="html">Creates a CLCircularRegion from a geofence dictionary.</Abstract>
			<DeclaredIn>CCHGeofenceService.h</DeclaredIn>
			
			<Declaration>+ (CLCircularRegion *)regionForGeofence:(NSDictionary *)geofence</Declaration>
			<Parameters>
				<Parameter>
					<Name>geofence</Name>
					<Abstract type="html">NSDictionary that contains geofence information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A CLCircularRegion from a geofence dictionary.</Abstract></ReturnValue>
			<Anchor>//api/name/regionForGeofence:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
	</File>
</Tokens>